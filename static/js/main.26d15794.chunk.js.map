{"version":3,"sources":["data/2016/index.ts","data/2017/index.ts","data/2018/index.ts","data/2019/index.ts","data/2020/index.ts","data/index.ts","components/DataTable.tsx","components/Intro.tsx","contexts/CustomerThemeProvider.tsx","hooks/useCustomTheme.ts","components/ResponsiveDrawer/DarkModeToggle.tsx","components/ResponsiveDrawer/GithubLink.tsx","components/ResponsiveDrawer/ResponsiveDrawer.tsx","components/InsightTable.tsx","utils/index.ts","components/MultipleFilter/MultipleFilter.tsx","components/TopInfo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["lmiaData2016","q1q2","q3","q4","q1","q2","2016","lmia2016data","2017","lmia2017data","2018","lmia2018data","2019","lmia2019data","2020","lmia2020data","allTime","LmiaDataTable","rows","React","useMemo","data","map","d","idx","id","style","height","window","innerHeight","width","columns","field","headerName","flex","type","filterModel","items","columnField","operatorValue","value","useStyles","makeStyles","theme","createStyles","title","marginTop","spacing","marginBottom","fontWeight","bulletContainer","paddingLeft","Intro","classes","Grid","item","xs","Container","maxWidth","Typography","variant","className","CustomThemeContext","createContext","setTheme","themes","light","primary","main","contrastText","dark","CustomThemeProvider","props","children","prefersDarkMode","useMediaQuery","useState","localStorage","getItem","isInitialMount","useRef","useEffect","current","setItem","Provider","ThemeProvider","createMuiTheme","palette","useCustomTheme","useContext","DarkModeToggle","IconButton","color","aria-label","onClick","GithubLink","open","root","display","drawer","breakpoints","up","flexShrink","activePage","backgroundColor","appBar","zIndex","menuButton","marginRight","textDecoration","appBarSeparator","flexGrow","drawerPaper","drawerContainer","overflow","content","padding","ResponsiveDrawer","useTheme","mobileOpen","setMobileOpen","location","useLocation","handleDrawerToggle","Toolbar","Divider","List","label","link","icon","ListItem","button","component","Link","to","pathname","undefined","ListItemIcon","ListItemText","container","document","body","CssBaseline","AppBar","position","elevation","edge","Hidden","smUp","implementation","Drawer","anchor","direction","onClose","paper","ModalProps","keepMounted","xsDown","table","minWidth","InsightTable","tableTitle","tableHeaderRow","ranking","TableContainer","Paper","Table","TableHead","TableRow","TableCell","header","columnIdx","align","length","TableBody","row","Object","keys","key","capitalizeFirstLetter","str","charAt","toUpperCase","slice","formControl","chips","flexWrap","chip","margin","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","getStyles","occupation","occupationFilters","indexOf","typography","fontWeightRegular","fontWeightMedium","MultipleFilter","filterType","optionList","handleChange","handleChangeMultiple","innerWidth","isNativeSelect","setIsNativeSelect","mql","matchMedia","changeEventHandler","e","mobileView","matches","addEventListener","removeEventListener","FormControl","InputLabel","shrink","htmlFor","Select","native","multiple","onChange","inputProps","name","whiteSpace","opt","labelId","input","Input","renderValue","selected","v","Chip","MenuItem","occupationList","Array","from","Set","Occupation","sort","provinceList","yearOptions","rowOptions","optionBtn","TopInfo","infoType","year","setYear","rowNumber","setRowNumber","setOccupationFilters","provinceFilters","setProvinceFilters","tableData","tempGroup","filteredData","tempData","_","groupBy","sortBy","quantity","Number","reduce","a","c","reverse","filter","includes","employer","province","event","target","options","i","l","push","Button","getTableTitle","firstColumn","getTableHeaderRow","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uus6tBAEe,cAAIA,G,2BCEL,wBAAKC,GAAnB,YAA4BC,GAA5B,YAAmCC,I,oCCCrB,wBAAKC,GAAnB,YAA0BC,GAA1B,YAAiCH,GAAjC,YAAwCC,I,oCCA1B,wBAAKC,GAAnB,YAA0BC,GAA1B,YAAiCH,GAAjC,YAAwCC,I,oCCA1B,wBAAKC,GAAnB,YAA0BC,GAA1B,YAAiCH,GAAjC,YAAwCC,ICgBzB,GACbG,KAAMC,EACNC,KAAMC,EACNC,KAAMC,EACNC,KAAMC,EACNC,KAAMC,EACNC,QAde,sBACZT,GADY,YAEZE,GAFY,YAGZE,GAHY,YAIZE,GAJY,YAKZE,K,OC+CUE,MA5Df,WACE,IAAMC,EAAOC,IAAMC,SACjB,kBACE,YAAIC,EAAKL,SAASM,KAAI,SAACC,EAAGC,GAAJ,oBACpBC,GAAID,GACDD,QAEP,IA6BF,OACE,qBAAKG,MAAO,CAAEC,OAAQC,OAAOC,YAAc,IAAQC,MAAO,QAA1D,SACE,cAAC,IAAD,CACEZ,KAAMA,EACNa,QA9BS,CACb,CACEC,MAAO,qBACPC,WAAY,qBACZC,KAAM,GAER,CAAEF,MAAO,SAAUC,WAAY,SAAUC,KAAM,GAC/C,CAAEF,MAAO,WAAYC,WAAY,WAAYC,KAAM,GACnD,CACEF,MAAO,UACPC,WAAY,UACZC,KAAM,GAER,CACEF,MAAO,aACPC,WAAY,aACZC,KAAM,GAER,CACEF,MAAO,qBACPC,WAAY,qBACZE,KAAM,SACND,KAAM,IASJE,YAAa,CACXC,MAAO,CACL,CACEC,YAAa,qBACbC,cAAe,WACfC,MAAO,IAET,CACEF,YAAa,aACbC,cAAe,WACfC,MAAO,W,2CCpDfC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,MAAO,CACLC,UAAWH,EAAMI,QAAQ,GACzBC,aAAcL,EAAMI,QAAQ,GAC5BE,WAAY,QAEdC,gBAAiB,CACfC,YAAaR,EAAMI,QAAQ,SAuClBK,MAlCf,WACE,IAAMC,EAAUZ,IAEhB,OACE,cAACa,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAWR,EAAQR,MAA5C,wDAGA,cAACc,EAAA,EAAD,gJAIA,cAACA,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAWR,EAAQR,MAA5C,8CAGA,qBAAIgB,UAAWR,EAAQH,gBAAvB,UACE,6BACE,cAACS,EAAA,EAAD,gEAIF,6BACE,cAACA,EAAA,EAAD,oDAEF,6BACE,cAACA,EAAA,EAAD,8D,iUCxBCG,GAAqBC,wBAAsC,CACtEpB,MAAO,QACPqB,SAAU,iBAAM,WAGZC,GAEF,CACFC,MAAO,CACLC,QAAS,CACPC,KAAM,UACNC,aAAc,SAGlBC,KAAM,CACJH,QAAS,CACPC,KAAM,aA+CGG,OAtCf,SAA6BC,GAAe,IAAD,EA0BlBrC,EAzBfsC,EAAaD,EAAbC,SACFC,EAAkBC,aAAc,gCAFG,EAGfC,mBAAQ,UAC/BhD,OAAOiD,aAAaC,QAAQ,gBADG,QACmB,SAJZ,mBAGlCnC,EAHkC,KAG3BqB,EAH2B,KAMnCe,EAAiBC,kBAAO,GAyB9B,OAvBAC,qBAAU,WACHrD,OAAOiD,aAAaC,QAAQ,UAC/Bd,EAASU,EAAkB,OAAS,WAErC,CAACA,IAEJO,qBAAU,WACHF,EAAeG,SAClBtD,OAAOiD,aAAaM,QAAQ,QAASxC,KAEtC,CAACA,IAEJsC,qBAAU,WACJF,EAAeG,UACjBH,EAAeG,SAAU,MAU3B,cAACpB,GAAmBsB,SAApB,CAA6B5C,MAAO,CAAEG,QAAOqB,YAA7C,SACE,cAACqB,GAAA,EAAD,CAAe1C,OAPIR,EAOiBQ,EANtC2C,aAAe,CACbC,QAAQ,aAAGpD,QAAS8B,GAAO9B,OAK3B,SAA6CsC,OCnEpCe,OANf,WAA2B,IAAD,EACIC,qBAAW3B,IAEvC,MAAO,CAAEnB,MAHe,EAChBA,MAEQqB,SAHQ,EACTA,WCgBF0B,OAff,WAA2B,IAAD,EACIF,KAApB7C,EADgB,EAChBA,MAAOqB,EADS,EACTA,SACf,OACE,cAAC2B,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,mBACXC,QAAS,WACP9B,EAAmB,SAAVrB,EAAmB,QAAU,SAJ1C,SAOa,SAAVA,EAAmB,cAAC,KAAD,IAAsB,cAAC,KAAD,O,qBCEjCoD,OAdf,WACE,OACE,cAACJ,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXC,QAAS,kBACPlE,OAAOoE,KAAK,2CAA4C,WAJ5D,SAOE,cAAC,KAAD,OCkBAvD,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXqD,KAAM,CACJC,QAAS,QAEXC,OAAO,eACJxD,EAAMyD,YAAYC,GAAG,MAAQ,CAC5BvE,MATY,IAUZwE,WAAY,IAGhBC,WAAY,CACVC,gBAAwC,SAAvB7D,EAAM4C,QAAQpD,KAAkB,UAAY,WAE/DsE,OAAQ,CACNC,OAAQ/D,EAAM+D,OAAOP,OAAS,EAC9BK,gBAAwC,SAAvB7D,EAAM4C,QAAQpD,KAAkB,UAAY,WAE/DwE,WAAW,aACTC,YAAajE,EAAMI,QAAQ,IAC1BJ,EAAMyD,YAAYC,GAAG,MAAQ,CAC5BH,QAAS,SAGbrD,MAAO,CACLgE,eAAgB,OAChBjB,MAA8B,SAAvBjD,EAAM4C,QAAQpD,KAAkB,OAAS,QAElD2E,gBAAiB,CACfC,SAAU,GAEZC,YAAa,CACXlF,MAlCc,KAoChBmF,gBAAiB,CACfC,SAAU,QAEZC,QAAS,CACPJ,SAAU,EACVK,QAASzE,EAAMI,QAAQ,SAkJdsE,OApIf,SAA0B7C,GAAe,IAC/B5C,EAAqB4C,EAArB5C,OAAQ6C,EAAaD,EAAbC,SACVpB,EAAUZ,KACVE,EAAQ2E,eAHwB,EAIFnG,IAAMyD,UAAS,GAJb,mBAI/B2C,EAJ+B,KAInBC,EAJmB,KAKhCC,EAAWC,cAEXC,EAAqB,WACzBH,GAAeD,IAGXpB,EACJ,gCACE,cAACyB,GAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,UACG,CACC,CACEC,MAAO,QACPC,KAAM,IACNC,KAAM,cAAC,KAAD,KAER,CACEF,MAAO,eACPC,KAAM,YACNC,KAAM,cAAC,KAAD,KAER,CACEF,MAAO,eACPC,KAAM,YACNC,KAAM,cAAC,KAAD,KAER,CACEF,MAAO,iBACPC,KAAM,cACNC,KAAM,cAAC,KAAD,KAER,CACEF,MAAO,aACPC,KAAM,QACNC,KAAM,cAAC,KAAD,MAER3G,KAAI,SAACiC,GAAD,OACJ,gCACE,eAAC2E,EAAA,EAAD,CACEC,QAAM,EACNC,UAAWC,IACXC,GAAI/E,EAAKyE,KACTlC,QAAS,WACHyB,GACFI,KAGJ9D,UACE4D,EAASc,WAAahF,EAAKyE,KAAO3E,EAAQkD,gBAAaiC,EAV3D,UAaE,cAACC,EAAA,EAAD,UAAelF,EAAK0E,OACpB,cAACS,GAAA,EAAD,CAAcvE,QAASZ,EAAKwE,WAE9B,cAACF,EAAA,EAAD,MAjBQtE,EAAKwE,eAwBjBY,OACOH,IAAX5G,EAAuB,kBAAMA,IAASgH,SAASC,WAAOL,EAExD,OACE,sBAAK3E,UAAWR,EAAQ4C,KAAxB,UACE,cAAC6C,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQnF,UAAWR,EAAQoD,OAAQwC,UAAW,EAA/D,SACE,eAACrB,GAAA,EAAD,WACE,cAACjC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXqD,KAAK,QACLpD,QAAS6B,EACT9D,UAAWR,EAAQsD,WALrB,SAOE,cAAC,KAAD,CAAUf,MAAM,aAElB,cAAC,IAAD,CAAM0C,GAAG,IAAIzE,UAAWR,EAAQR,MAAhC,SAEE,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAApB,oDAEF,mBAAGC,UAAWR,EAAQyD,kBACtB,cAAC,GAAD,IACA,cAAC,GAAD,SAGJ,sBAAKjD,UAAWR,EAAQ8C,OAAQN,aAAW,eAA3C,UAEE,cAACsD,EAAA,EAAD,CAAQC,MAAI,EAACC,eAAe,MAA5B,SACE,cAACC,EAAA,EAAD,CACEX,UAAWA,EACX/E,QAAQ,YACR2F,OAA4B,QAApB5G,EAAM6G,UAAsB,QAAU,OAC9CxD,KAAMuB,EACNkC,QAAS9B,EACTtE,QAAS,CACPqG,MAAOrG,EAAQ2D,aAEjB2C,WAAY,CACVC,aAAa,GAVjB,SAaGzD,MAGL,cAACgD,EAAA,EAAD,CAAQU,QAAM,EAACR,eAAe,MAA9B,SACE,cAACC,EAAA,EAAD,CACEjG,QAAS,CACPqG,MAAOrG,EAAQ2D,aAEjBpD,QAAQ,YACRoC,MAAI,EALN,SAOE,qBAAKnC,UAAWR,EAAQ4D,gBAAxB,SAA0Cd,WAIhD,uBAAMtC,UAAWR,EAAQ8D,QAAzB,UACE,cAACS,GAAA,EAAD,IACCnD,S,mGCtMHhC,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXkH,MAAO,CACLC,SAAU,KAEZlH,MAAO,CACLC,UAAWH,EAAMI,QAAQ,GACzBC,aAAcL,EAAMI,QAAQ,SAcnB,SAASiH,GAAaxF,GAAe,IAC1CyF,EAAsDzF,EAAtDyF,WAAYC,EAA0C1F,EAA1C0F,eAAgB7I,EAA0BmD,EAA1BnD,KADa,EACamD,EAApB2F,eADO,SAE3C9G,EAAUZ,KAEhB,OACE,gCACGwH,GACC,cAACtG,EAAA,EAAD,CAAYC,QAAQ,KAAKwE,UAAU,KAAKvE,UAAWR,EAAQR,MAA3D,SACGoH,IAGL,cAACG,GAAA,EAAD,CAAgBhC,UAAWiC,KAA3B,SACE,eAACC,GAAA,EAAD,CAAOzG,UAAWR,EAAQyG,MAAOjE,aAAW,gBAA5C,UACE,cAAC0E,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,WACGL,GAAW,cAACM,GAAA,EAAD,gCACXP,EAAe5I,KAAI,SAACoJ,EAAQC,GAAT,OAClB,cAACF,GAAA,EAAD,CAEEG,MACED,IAAcT,EAAeW,OAAS,EAClC,aACArC,EALR,SAQGkC,GAPIA,WAYb,cAACI,GAAA,EAAD,UACGzJ,EAAKC,KAAI,SAACyJ,EAAKvJ,GAAN,OACR,eAACgJ,GAAA,EAAD,WACGL,GAAW,cAACM,GAAA,EAAD,UAAYjJ,EAAM,IAC7BwJ,OAAOC,KAAKF,GAAKzJ,KAAI,SAAC4J,EAAKP,GAAN,OACpB,cAACF,GAAA,EAAD,CAEEG,MACED,IAAcK,OAAOC,KAAKF,GAAKF,OAAS,EACpC,aACArC,EALR,SAQGuC,EAAIG,IAPAA,QAJX,UAAkBhB,EAAe1I,GAAjC,gBAA6CA,iB,8DCjEpD,SAAS2J,GAAsBC,GACpC,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,GAGlC,ICcT9I,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACX4I,YAAa,CACX1I,UAAWH,EAAMI,QAAQ,GACzBmD,QAAS,OACT6D,SAAU,KAEZ0B,MAAO,CACLvF,QAAS,OACTwF,SAAU,QAEZC,KAAM,CACJC,OAAQ,QAORC,GAAY,CAChBC,WAAY,CACVpK,MAAO,CACLqK,UAAWC,IACXlK,MAAO,OAKb,SAASmK,GACPC,EACAC,EACAxJ,GAEA,MAAO,CACLM,YAC6C,IAA3CkJ,EAAkBC,QAAQF,GACtBvJ,EAAM0J,WAAWC,kBACjB3J,EAAM0J,WAAWE,kBA0GZC,OA9Ff,SAAwBhI,GAAe,IAEnCiI,EAKEjI,EALFiI,WACAjK,EAIEgC,EAJFhC,MACAkK,EAGElI,EAHFkI,WACAC,EAEEnI,EAFFmI,aACAC,EACEpI,EADFoI,qBAEIjK,EAAQ2E,eACRjE,EAAUZ,KAToB,EAUQmC,mBAAShD,OAAOiL,WAAa,KAVrC,mBAU7BC,EAV6B,KAUbC,EAVa,KA8BpC,OAlBA9H,qBAAU,WACR,IAAM+H,EAAMpL,OAAOqL,WAAW,sBAExBC,EAAqB,SAACC,GAC1B,IAAMC,EAAaD,EAAEE,QAEnBN,IADEK,IAQN,OADAJ,EAAIM,iBAAiB,SAAUJ,GACxB,WACLF,EAAIO,oBAAoB,SAAUL,MAEnC,IAGD,cAACM,GAAA,EAAD,CAAa3J,UAAWR,EAAQmI,YAAhC,SACGsB,EACC,qCACE,cAACW,GAAA,EAAD,CAAYC,QAAM,EAACC,QAAQ,yBAA3B,SACGxC,GAAsBsB,KAEzB,cAACmB,GAAA,EAAD,CACEC,QAAM,EACNC,UAAQ,EACRtL,MAAOA,EACPuL,SAAUnB,EACVoB,WAAY,CACVC,KAAMxB,EACNhL,GAAG,GAAD,OAAKgL,EAAL,wBACF/K,MAAO,CACLwM,WAAY,WATlB,SAaGxB,EAAWpL,KAAI,SAAC6M,GAAD,OACd,wBAAkB3L,MAAO2L,EAAzB,SACGA,GADUA,WAOnB,qCACE,cAACV,GAAA,EAAD,CAAYhM,GAAE,UAAKgL,EAAL,wBAAd,SACGtB,GAAsBsB,KAEzB,cAACmB,GAAA,EAAD,CACEQ,QAAO,UAAK3B,EAAL,wBACPhL,GAAE,UAAKgL,EAAL,kBACFqB,UAAQ,EACRtL,MAAOA,EACPuL,SAAUpB,EACV0B,MAAO,cAACC,GAAA,EAAD,CAAO7M,GAAE,0BAAqBgL,KACrC8B,YAAa,SAACC,GAAD,OACX,qBAAK3K,UAAWR,EAAQoI,MAAxB,SACI+C,EAAsBlN,KAAI,SAACmN,GAAD,OAC1B,cAACC,GAAA,EAAD,CAAc3G,MAAO0G,EAAG5K,UAAWR,EAAQsI,MAAhC8C,SAIjB5C,UAAWA,GAdb,SAgBGa,EAAWpL,KAAI,SAAC6M,GAAD,OACd,cAACQ,GAAA,EAAD,CAEEnM,MAAO2L,EACPzM,MAAOuK,GAAUkC,EAAK3L,EAAOG,GAH/B,SAKGwL,GAJIA,cCrIfS,GAAiB,YAClBC,MAAMC,KACP,IAAIC,IAAI,YAAK1N,EAAKL,SAAwBM,KAAI,SAACC,GAAD,OAAOA,EAAEyN,iBAEzDC,OAEIC,GAAe,YAChBL,MAAMC,KACP,IAAIC,IACF,YAAK1N,EAAKL,SAAwBM,KAAI,SAACC,GAAD,OAAOA,EAAE,4BAGnD0N,OAKIE,GAA8B,CAClC,OACA,OACA,OACA,OACA,OACA,WAGIC,GAAa,CAAC,GAAI,GAAI,KAEtB3M,GAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,MAAO,CACLC,UAAWH,EAAMI,QAAQ,GACzBC,aAAcL,EAAMI,QAAQ,IAE9BsM,UAAW,CACTzI,YAAajE,EAAMI,QAAQ,GAC3BD,UAAWH,EAAMI,QAAQ,IACzBC,aAAcL,EAAMI,QAAQ,KAE9ByI,YAAa,CACX1I,UAAWH,EAAMI,QAAQ,GACzBmD,QAAS,OACT6D,SAAU,KAEZ0B,MAAO,CACLvF,QAAS,OACTwF,SAAU,QAEZC,KAAM,CACJC,OAAQ,QAwMC0D,OAnMf,SAAiB9K,GAAe,IACtB+K,EAAa/K,EAAb+K,SACFlM,EAAUZ,KAFa,EAGLmC,mBAAuB,QAHlB,mBAGtB4K,EAHsB,KAGhBC,EAHgB,OAIK7K,mBAAS,IAJd,mBAItB8K,EAJsB,KAIXC,EAJW,OAKqB/K,mBAAmB,IALxC,mBAKtBuH,EALsB,KAKHyD,EALG,OAMiBhL,mBAAmB,IANpC,mBAMtBiL,EANsB,KAMLC,EANK,KAQvBC,EAAY3O,mBAAQ,WACxB,IAEI4O,EAFAC,EAAiE,GACjEC,EAAoB,YAAO7O,EAAKmO,IAEpC,OAAQD,GACN,IAAK,aACHS,EAAYG,KAAEC,QAAQF,EAAU,cAChCD,EAAeE,KAAEE,OACfrF,OAAOC,KAAK+E,GAAW1O,KAAI,SAAC4J,GAAD,MAAU,CACnCgB,WAAYhB,EACZoF,SAAUN,EAAU9E,GACjB5J,KAAI,SAACC,GAAD,OAAOgP,OAAOhP,EAAE,0BACpBiP,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,OAE7B,YACAC,UACF,MACF,IAAK,WACCd,EAAgBhF,SAClBqF,EAAWA,EAASU,QAAO,SAACrP,GAAD,OACzBsO,EAAgBgB,SAAStP,EAAE,2BAG3B4K,EAAkBtB,SACpBqF,EAAWA,EAASU,QAAO,SAACrP,GAAD,OACzB4K,EAAkB0E,SAAStP,EAAEyN,gBAGjCgB,EAAYG,KAAEC,QAAQF,EAAU,YAChCD,EAAeE,KAAEE,OACfrF,OAAOC,KAAK+E,GAAW1O,KAAI,SAAC4J,GAAD,MAAU,CACnC4F,SAAU5F,EACVoF,SAAWN,EAAU9E,GAClB5J,KAAI,SAACC,GAAD,OAAOgP,OAAOhP,EAAE,0BACpBiP,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,OAE7B,YACAC,UACF,MACF,IAAK,WACHX,EAAYG,KAAEC,QAAQF,EAAU,sBAChCD,EAAeE,KAAEE,OACfrF,OAAOC,KAAK+E,GAAW1O,KAAI,SAAC4J,GAAD,MAAU,CACnC6F,SAAU7F,EACVoF,SAAUN,EAAU9E,GACjB5J,KAAI,SAACC,GAAD,OAAOgP,OAAOhP,EAAE,0BACpBiP,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,OAE7B,YACAC,UAKN,OAAOV,IACN,CAACV,EAAUC,EAAMK,EAAiB1D,IAiC/BQ,EAAe,SAACxK,GAAD,OAAsB,SACzC6O,GAEA,OAAQ7O,GACN,IAAK,aACHyN,EAAqBoB,EAAMC,OAAOzO,OAClC,MACF,IAAK,WACHsN,EAAmBkB,EAAMC,OAAOzO,UAOhCoK,EAAuB,SAACzK,GAAD,OAAsB,SACjD6O,GAIA,IAHI,IACIE,EAAYF,EAAMC,OAAlBC,QACF1O,EAAkB,GACf2O,EAAI,EAAGC,EAAIF,EAAQrG,OAAQsG,EAAIC,EAAGD,GAAK,EAC1CD,EAAQC,GAAG3C,UACbhM,EAAM6O,KAAKH,EAAQC,GAAG3O,OAG1B,OAAQL,GACN,IAAK,aACHyN,EAAqBpN,GACrB,MACF,IAAK,WACHsN,EAAmBtN,MAOzB,OACE,cAACc,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,SACE,eAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,UACGyL,GAAY7N,KAAI,SAAC6M,GAAD,OACf,cAACmD,GAAA,EAAD,CAEE1N,QAAS4L,IAASrB,EAAM,YAAc,WACtCvI,MAAO4J,IAASrB,EAAM,eAAY3F,EAClC1C,QAAS,WACP2J,EAAQtB,IAEVtK,UAAWR,EAAQgM,UAPrB,SASGlB,GATH,sBACsBA,OAWxB,cAACxK,EAAA,EAAD,CAAYC,QAAQ,KAAKwE,UAAU,KAAKvE,UAAWR,EAAQR,MAA3D,iBAICuM,GAAW9N,KAAI,SAAC6M,GAAD,OACd,cAACmD,GAAA,EAAD,CAEE1N,QAAS8L,IAAcvB,EAAM,YAAc,WAC3CvI,MAAO8J,IAAcvB,EAAM,eAAY3F,EACvC1C,QAAS,WACP6J,EAAaxB,IAEftK,UAAWR,EAAQgM,UAPrB,SASGlB,GATH,qBACqBA,OAWT,aAAboB,GACC,qCACE,cAAC,GAAD,CACE9C,WAAW,WACXjK,MAAOqN,EACPnD,WAAYwC,GACZvC,aAAcA,EAAa,YAC3BC,qBAAsBA,EAAqB,cAE7C,cAAC,GAAD,CACEH,WAAW,aACXjK,MAAO2J,EACPO,WAAYkC,GACZjC,aAAcA,EAAa,cAC3BC,qBAAsBA,EAAqB,mBAIjD,cAAC5C,GAAD,CACEC,WAxHc,WACpB,OAAQsF,GACN,IAAK,WACH,MAAO,WACT,IAAK,aACH,MAAO,aACT,IAAK,WACH,MAAO,0BACT,QACE,MAAO,IA+GOgC,GACZrH,eA5GkB,WACxB,IAAIsH,EAAc,GAClB,OAAQjC,GACN,IAAK,WACHiC,EAAc,wBACd,MACF,IAAK,aACHA,EAAc,0BACd,MACF,IAAK,WACHA,EAAc,qBAKlB,MAAO,CAACA,EAAa,YA6FCC,GAChBpQ,KAAM0O,EAAUxE,MAAM,EAAGmE,GACzBvF,SAAO,UC/NFuH,OA1Bf,WACE,OACE,cAAC,IAAD,UACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,GAAD,CAASpC,SAAS,eAEpB,cAAC,IAAD,CAAOoC,KAAK,YAAZ,SACE,cAAC,GAAD,CAASpC,SAAS,eAEpB,cAAC,IAAD,CAAOoC,KAAK,cAAZ,SACE,cAAC,GAAD,CAASpC,SAAS,iBAEpB,cAAC,IAAD,CAAOoC,KAAK,IAAZ,SACE,cAAC,EAAD,cCXGC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,UACE,cAAC,GAAD,QAGJ3J,SAAS4J,eAAe,SAM1BZ,O","file":"static/js/main.26d15794.chunk.js","sourcesContent":["import lmiaData2016 from './2016_Positive_Employer_EN.json';\n\nexport default [...lmiaData2016];\n","import q1q2 from './2017Q1Q2_Positive_EN.json';\nimport q3 from './2017Q3_Positive_Employer_Stream_EN.json';\nimport q4 from './2017Q4_Positive_Employer_EN.json';\n\nexport default [...q1q2, ...q3, ...q4];\n","import q1 from './2018Q1_Positive_Employer_EN.json';\nimport q2 from './2018Q2_Positive_Employer_EN.json';\nimport q3 from './2018Q3_Positive_EN.json';\nimport q4 from './2018Q4_Positive_EN.json';\n\nexport default [...q1, ...q2, ...q3, ...q4];\n","import q1 from './TFWP_2019Q1_employer_positive_EN.json';\nimport q2 from './TFWP_2019Q2_employer_positive_EN.json';\nimport q3 from './TFWP_2019Q3_Positive_EN.json';\nimport q4 from './TFWP_2019Q4_Positive_EN.json';\n\nexport default [...q1, ...q2, ...q3, ...q4];\n","import q1 from './TFWP_2020Q1_Positive_EN.json';\nimport q2 from './TFWP_2020Q2_Positive_EN.json';\nimport q3 from './TFWP_2020Q3_Positive_EN.json';\nimport q4 from './TFWP_2020Q4_Positive_EN.json';\n\nexport default [...q1, ...q2, ...q3, ...q4];\n","import lmia2016data from './2016';\nimport lmia2017data from './2017';\nimport lmia2018data from './2018';\nimport lmia2019data from './2019';\nimport lmia2020data from './2020';\nimport { LmiaDataYear, LmiaData } from './types';\n\nexport { default as lmia2016data } from './2016';\nexport { default as lmia2017data } from './2017';\nexport { default as lmia2018data } from './2018';\nexport { default as lmia2019data } from './2019';\nexport { default as lmia2020data } from './2020';\n\nconst allTimeData = [\n  ...lmia2016data,\n  ...lmia2017data,\n  ...lmia2018data,\n  ...lmia2019data,\n  ...lmia2020data,\n];\n\nexport default {\n  2016: lmia2016data,\n  2017: lmia2017data,\n  2018: lmia2018data,\n  2019: lmia2019data,\n  2020: lmia2020data,\n  allTime: allTimeData,\n} as { [key in LmiaDataYear]: LmiaData[] };\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport data from '../data';\n\nfunction LmiaDataTable() {\n  const rows = React.useMemo(\n    () =>\n      [...data.allTime].map((d, idx) => ({\n        id: idx,\n        ...d,\n      })),\n    []\n  );\n\n  const column = [\n    {\n      field: 'Province/Territory',\n      headerName: 'Province/Territory',\n      flex: 1,\n    },\n    { field: 'Stream', headerName: 'Stream', flex: 1 },\n    { field: 'Employer', headerName: 'Employer', flex: 1 },\n    {\n      field: 'Address',\n      headerName: 'Address',\n      flex: 1,\n    },\n    {\n      field: 'Occupation',\n      headerName: 'Occupation',\n      flex: 1,\n    },\n    {\n      field: 'Approved Positions',\n      headerName: 'Approved Positions',\n      type: 'number',\n      flex: 1,\n    },\n  ];\n\n  return (\n    <div style={{ height: window.innerHeight - 64 * 2, width: '100%' }}>\n      <DataGrid\n        rows={rows}\n        columns={column}\n        filterModel={{\n          items: [\n            {\n              columnField: 'Province/Territory',\n              operatorValue: 'contains',\n              value: '',\n            },\n            {\n              columnField: 'Occupation',\n              operatorValue: 'contains',\n              value: '',\n            },\n          ],\n        }}\n      />\n    </div>\n  );\n}\n\nexport default LmiaDataTable;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      fontWeight: 'bold',\n    },\n    bulletContainer: {\n      paddingLeft: theme.spacing(2),\n    },\n  })\n);\n\nfunction Intro() {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12}>\n      <Container maxWidth=\"md\">\n        <Typography variant=\"h4\" className={classes.title}>\n          What is a Labour Market Impact Assessment?\n        </Typography>\n        <Typography>\n          A Labour Market Impact Assessment (LMIA) is a document that an\n          employer in Canada may need to get before hiring a foreign worker.\n        </Typography>\n        <Typography variant=\"h4\" className={classes.title}>\n          Purpose of this website is to...\n        </Typography>\n        <ul className={classes.bulletContainer}>\n          <li>\n            <Typography>\n              Show how many LMIA are issued for each Province\n            </Typography>\n          </li>\n          <li>\n            <Typography>Find out which employers hired most</Typography>\n          </li>\n          <li>\n            <Typography>Know which occupations are demanding</Typography>\n          </li>\n        </ul>\n      </Container>\n    </Grid>\n  );\n}\n\nexport default Intro;\n","import React, {\n  useState,\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useRef,\n} from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { PaletteOptions } from '@material-ui/core/styles/createPalette';\n\ntype Theme = 'dark' | 'light';\n\ntype CustomThemeContextType = {\n  theme: Theme;\n  setTheme: Dispatch<SetStateAction<Theme>>;\n};\n\nexport const CustomThemeContext = createContext<CustomThemeContextType>({\n  theme: 'light',\n  setTheme: () => 'light',\n});\n\nconst themes: {\n  [key in Theme]: PaletteOptions;\n} = {\n  light: {\n    primary: {\n      main: '#38d1cc',\n      contrastText: '#fff',\n    },\n  },\n  dark: {\n    primary: {\n      main: '#593d88',\n    },\n  },\n};\n\ninterface Props {\n  children: JSX.Element;\n}\n\nfunction CustomThemeProvider(props: Props) {\n  const { children } = props;\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const [theme, setTheme] = useState<Theme>(\n    (window.localStorage.getItem('theme') as Theme) ?? 'light'\n  );\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (!window.localStorage.getItem('theme')) {\n      setTheme(prefersDarkMode ? 'dark' : 'light');\n    }\n  }, [prefersDarkMode]);\n\n  useEffect(() => {\n    if (!isInitialMount.current) {\n      window.localStorage.setItem('theme', theme);\n    }\n  }, [theme]);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    }\n  });\n\n  const generateTheme = (type: Theme) =>\n    createMuiTheme({\n      palette: { type, ...themes[type] },\n    });\n\n  return (\n    <CustomThemeContext.Provider value={{ theme, setTheme }}>\n      <ThemeProvider theme={generateTheme(theme)}>{children}</ThemeProvider>\n    </CustomThemeContext.Provider>\n  );\n}\n\nexport default CustomThemeProvider;\n","import { useContext } from 'react';\n\nimport { CustomThemeContext } from '../contexts/CustomerThemeProvider';\n\nfunction useCustomTheme() {\n  const { theme, setTheme } = useContext(CustomThemeContext);\n\n  return { theme, setTheme };\n}\n\nexport default useCustomTheme;\n","import React from 'react';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport IconButton from '@material-ui/core/IconButton';\nimport useCustomTheme from '../../hooks/useCustomTheme';\n\nfunction DarkModeToggle() {\n  const { theme, setTheme } = useCustomTheme();\n  return (\n    <IconButton\n      color=\"default\"\n      aria-label=\"dark mode toggle\"\n      onClick={() => {\n        setTheme(theme === 'dark' ? 'light' : 'dark');\n      }}\n    >\n      {theme === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n    </IconButton>\n  );\n}\n\nexport default DarkModeToggle;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nfunction GithubLink() {\n  return (\n    <IconButton\n      color=\"default\"\n      aria-label=\"open github\"\n      onClick={() =>\n        window.open('https://github.com/edwhywong/lmia-canada', '_blank')\n      }\n    >\n      <GitHubIcon />\n    </IconButton>\n  );\n}\n\nexport default GithubLink;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport InfoIcon from '@material-ui/icons/Info';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PublicIcon from '@material-ui/icons/Public';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  makeStyles,\n  useTheme,\n  Theme,\n  createStyles,\n} from '@material-ui/core/styles';\nimport { Link, useLocation } from 'react-router-dom';\nimport DarkModeToggle from './DarkModeToggle';\nimport GithubLink from './GithubLink';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    activePage: {\n      backgroundColor: theme.palette.type === 'dark' ? '#242526' : '#ebebeb',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      backgroundColor: theme.palette.type === 'dark' ? '#242526' : '#fafafb',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        display: 'none',\n      },\n    },\n    title: {\n      textDecoration: 'none',\n      color: theme.palette.type === 'dark' ? '#fff' : '#666',\n    },\n    appBarSeparator: {\n      flexGrow: 1,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: 'auto',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n);\n\ninterface Props {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window?: () => Window;\n  children: JSX.Element;\n}\n\nfunction ResponsiveDrawer(props: Props) {\n  const { window, children } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const location = useLocation();\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <Toolbar />\n      <Divider />\n      <List>\n        {[\n          {\n            label: 'Intro',\n            link: '/',\n            icon: <InfoIcon />,\n          },\n          {\n            label: 'Top Province',\n            link: '/province',\n            icon: <PublicIcon />,\n          },\n          {\n            label: 'Top Employer',\n            link: '/employer',\n            icon: <BusinessIcon />,\n          },\n          {\n            label: 'Top Occupation',\n            link: '/occupation',\n            icon: <WorkIcon />,\n          },\n          {\n            label: 'Data table',\n            link: '/data',\n            icon: <StorageIcon />,\n          },\n        ].map((item) => (\n          <div key={item.label}>\n            <ListItem\n              button\n              component={Link}\n              to={item.link}\n              onClick={() => {\n                if (mobileOpen) {\n                  handleDrawerToggle();\n                }\n              }}\n              className={\n                location.pathname === item.link ? classes.activePage : undefined\n              }\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.label} />\n            </ListItem>\n            <Divider />\n          </div>\n        ))}\n      </List>\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar} elevation={2}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon color=\"action\" />\n          </IconButton>\n          <Link to=\"/\" className={classes.title}>\n            {/* <HomeIcon /> */}\n            <Typography variant=\"h6\">LMIA Canada 🇨🇦</Typography>\n          </Link>\n          <i className={classes.appBarSeparator} />\n          <GithubLink />\n          <DarkModeToggle />\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"lmia folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            <div className={classes.drawerContainer}>{drawer}</div>\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <Toolbar />\n        {children}\n      </main>\n    </div>\n  );\n}\n\nexport default ResponsiveDrawer;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      minWidth: 320,\n    },\n    title: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  })\n);\n\ninterface Props {\n  tableTitle?: string;\n  tableHeaderRow: string[];\n  data: {\n    [key: string]: string | number;\n  }[];\n  ranking?: boolean;\n}\n\nexport default function InsightTable(props: Props) {\n  const { tableTitle, tableHeaderRow, data, ranking = false } = props;\n  const classes = useStyles();\n\n  return (\n    <div>\n      {tableTitle && (\n        <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n          {tableTitle}\n        </Typography>\n      )}\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"insight table\">\n          <TableHead>\n            <TableRow>\n              {ranking && <TableCell>Rank 🎖</TableCell>}\n              {tableHeaderRow.map((header, columnIdx) => (\n                <TableCell\n                  key={header}\n                  align={\n                    columnIdx === tableHeaderRow.length - 1\n                      ? 'right'\n                      : undefined\n                  }\n                >\n                  {header}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row, idx) => (\n              <TableRow key={`${tableHeaderRow[idx]}-row-${idx}`}>\n                {ranking && <TableCell>{idx + 1}</TableCell>}\n                {Object.keys(row).map((key, columnIdx) => (\n                  <TableCell\n                    key={key}\n                    align={\n                      columnIdx === Object.keys(row).length - 1\n                        ? 'right'\n                        : undefined\n                    }\n                  >\n                    {row[key]}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","export function capitalizeFirstLetter(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport default {\n  capitalizeFirstLetter,\n};\n","import React, { useState, useEffect } from 'react';\nimport {\n  makeStyles,\n  Theme,\n  createStyles,\n  useTheme,\n} from '@material-ui/core/styles';\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  Input,\n  Chip,\n  MenuItem,\n} from '@material-ui/core';\nimport { FilterType } from './types';\nimport { capitalizeFirstLetter } from '../../utils';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      marginTop: theme.spacing(1),\n      display: 'flex',\n      minWidth: 120,\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    chip: {\n      margin: 2,\n    },\n  })\n);\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(\n  occupation: string,\n  occupationFilters: string[],\n  theme: Theme\n) {\n  return {\n    fontWeight:\n      occupationFilters.indexOf(occupation) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\ninterface Props {\n  value: string[];\n  filterType: FilterType;\n  optionList: string[];\n  handleChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\n  handleChangeMultiple: (event: React.ChangeEvent<{ value: unknown }>) => void;\n}\n\nfunction MultipleFilter(props: Props) {\n  const {\n    filterType,\n    value,\n    optionList,\n    handleChange,\n    handleChangeMultiple,\n  } = props;\n  const theme = useTheme();\n  const classes = useStyles();\n  const [isNativeSelect, setIsNativeSelect] = useState(window.innerWidth < 600);\n\n  useEffect(() => {\n    const mql = window.matchMedia('(max-width: 600px)');\n\n    const changeEventHandler = (e: MediaQueryListEvent) => {\n      const mobileView = e.matches;\n      if (mobileView) {\n        setIsNativeSelect(true);\n      } else {\n        setIsNativeSelect(false);\n      }\n    };\n\n    mql.addEventListener('change', changeEventHandler);\n    return () => {\n      mql.removeEventListener('change', changeEventHandler);\n    };\n  }, []);\n\n  return (\n    <FormControl className={classes.formControl}>\n      {isNativeSelect ? (\n        <>\n          <InputLabel shrink htmlFor=\"select-multiple-native\">\n            {capitalizeFirstLetter(filterType)}\n          </InputLabel>\n          <Select\n            native\n            multiple\n            value={value}\n            onChange={handleChangeMultiple}\n            inputProps={{\n              name: filterType,\n              id: `${filterType}-select-helper-label`,\n              style: {\n                whiteSpace: 'normal',\n              },\n            }}\n          >\n            {optionList.map((opt) => (\n              <option key={opt} value={opt}>\n                {opt}\n              </option>\n            ))}\n          </Select>\n        </>\n      ) : (\n        <>\n          <InputLabel id={`${filterType}-select-helper-label`}>\n            {capitalizeFirstLetter(filterType)}\n          </InputLabel>\n          <Select\n            labelId={`${filterType}-select-helper-label`}\n            id={`${filterType}-select-helper`}\n            multiple\n            value={value}\n            onChange={handleChange}\n            input={<Input id={`select-multiple-${filterType}`} />}\n            renderValue={(selected) => (\n              <div className={classes.chips}>\n                {(selected as string[]).map((v) => (\n                  <Chip key={v} label={v} className={classes.chip} />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {optionList.map((opt) => (\n              <MenuItem\n                key={opt}\n                value={opt}\n                style={getStyles(opt, value, theme)}\n              >\n                {opt}\n              </MenuItem>\n            ))}\n          </Select>\n        </>\n      )}\n    </FormControl>\n  );\n}\n\nexport default MultipleFilter;\n","import React, { useState, useMemo } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Button, Container, Grid, Typography } from '@material-ui/core';\nimport _ from 'lodash';\nimport { LmiaData, LmiaDataYear, Province } from '../data/types';\nimport { FilterType } from './MultipleFilter/types';\nimport data from '../data';\nimport InsightTable from './InsightTable';\nimport MultipleFilter from './MultipleFilter';\n\ntype OccupationInfo = { occupation: string; quantity: number };\ntype EmployerInfo = { employer: string; quantity: number };\ntype ProvinceInfo = { province: Province; quantity: number };\n\nconst occupationList = [\n  ...Array.from(\n    new Set(([...data.allTime] as LmiaData[]).map((d) => d.Occupation))\n  ),\n].sort();\n\nconst provinceList = [\n  ...Array.from(\n    new Set(\n      ([...data.allTime] as LmiaData[]).map((d) => d['Province/Territory'])\n    )\n  ),\n].sort();\ninterface Props {\n  infoType: 'occupation' | 'employer' | 'province';\n}\n\nconst yearOptions: LmiaDataYear[] = [\n  '2020',\n  '2019',\n  '2018',\n  '2017',\n  '2016',\n  'allTime',\n];\n\nconst rowOptions = [25, 50, 100];\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    optionBtn: {\n      marginRight: theme.spacing(1),\n      marginTop: theme.spacing(0.5),\n      marginBottom: theme.spacing(0.5),\n    },\n    formControl: {\n      marginTop: theme.spacing(1),\n      display: 'flex',\n      minWidth: 120,\n    },\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    chip: {\n      margin: 2,\n    },\n  })\n);\n\nfunction TopInfo(props: Props) {\n  const { infoType } = props;\n  const classes = useStyles();\n  const [year, setYear] = useState<LmiaDataYear>('2020');\n  const [rowNumber, setRowNumber] = useState(25);\n  const [occupationFilters, setOccupationFilters] = useState<string[]>([]);\n  const [provinceFilters, setProvinceFilters] = useState<string[]>([]);\n\n  const tableData = useMemo(() => {\n    let filteredData: (OccupationInfo | EmployerInfo | ProvinceInfo)[] = [];\n    let tempData: LmiaData[] = [...data[year]];\n    let tempGroup: _.Dictionary<LmiaData[]>;\n    switch (infoType) {\n      case 'occupation':\n        tempGroup = _.groupBy(tempData, 'Occupation');\n        filteredData = _.sortBy(\n          Object.keys(tempGroup).map((key) => ({\n            occupation: key,\n            quantity: tempGroup[key]\n              .map((d) => Number(d['Approved Positions']))\n              .reduce((a, c) => a + c, 0),\n          })),\n          'quantity'\n        ).reverse();\n        break;\n      case 'employer':\n        if (provinceFilters.length) {\n          tempData = tempData.filter((d) =>\n            provinceFilters.includes(d['Province/Territory'])\n          );\n        }\n        if (occupationFilters.length) {\n          tempData = tempData.filter((d) =>\n            occupationFilters.includes(d.Occupation)\n          );\n        }\n        tempGroup = _.groupBy(tempData, 'Employer');\n        filteredData = _.sortBy(\n          Object.keys(tempGroup).map((key) => ({\n            employer: key,\n            quantity: (tempGroup[key] as LmiaData[])\n              .map((d) => Number(d['Approved Positions']))\n              .reduce((a, c) => a + c, 0),\n          })),\n          'quantity'\n        ).reverse();\n        break;\n      case 'province':\n        tempGroup = _.groupBy(tempData, 'Province/Territory');\n        filteredData = _.sortBy(\n          Object.keys(tempGroup).map((key) => ({\n            province: key as Province,\n            quantity: tempGroup[key]\n              .map((d) => Number(d['Approved Positions']))\n              .reduce((a, c) => a + c, 0),\n          })),\n          'quantity'\n        ).reverse();\n        break;\n      default:\n        break;\n    }\n    return filteredData;\n  }, [infoType, year, provinceFilters, occupationFilters]);\n\n  const getTableTitle = () => {\n    switch (infoType) {\n      case 'employer':\n        return 'Employer';\n      case 'occupation':\n        return 'Occupation';\n      case 'province':\n        return 'LMIA issued by Province';\n      default:\n        return '';\n    }\n  };\n\n  const getTableHeaderRow = () => {\n    let firstColumn = '';\n    switch (infoType) {\n      case 'employer':\n        firstColumn = 'Employer 🏢';\n        break;\n      case 'occupation':\n        firstColumn = 'Occupation 💼';\n        break;\n      case 'province':\n        firstColumn = 'Province/Territory';\n        break;\n      default:\n        break;\n    }\n    return [firstColumn, 'Quantity'];\n  };\n\n  const handleChange = (type: FilterType) => (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    switch (type) {\n      case 'occupation':\n        setOccupationFilters(event.target.value as string[]);\n        break;\n      case 'province':\n        setProvinceFilters(event.target.value as string[]);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleChangeMultiple = (type: FilterType) => (\n    event: React.ChangeEvent<{ value: unknown }>\n  ) => {\n    const { options } = event.target as HTMLSelectElement;\n    const value: string[] = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        value.push(options[i].value);\n      }\n    }\n    switch (type) {\n      case 'occupation':\n        setOccupationFilters(value);\n        break;\n      case 'province':\n        setProvinceFilters(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Container maxWidth=\"md\">\n        {yearOptions.map((opt) => (\n          <Button\n            key={`year-option-${opt}`}\n            variant={year === opt ? 'contained' : 'outlined'}\n            color={year === opt ? 'primary' : undefined}\n            onClick={() => {\n              setYear(opt);\n            }}\n            className={classes.optionBtn}\n          >\n            {opt}\n          </Button>\n        ))}\n        <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n          Top\n        </Typography>\n\n        {rowOptions.map((opt) => (\n          <Button\n            key={`row-option-${opt}`}\n            variant={rowNumber === opt ? 'contained' : 'outlined'}\n            color={rowNumber === opt ? 'primary' : undefined}\n            onClick={() => {\n              setRowNumber(opt);\n            }}\n            className={classes.optionBtn}\n          >\n            {opt}\n          </Button>\n        ))}\n        {infoType === 'employer' && (\n          <>\n            <MultipleFilter\n              filterType=\"province\"\n              value={provinceFilters}\n              optionList={provinceList}\n              handleChange={handleChange('province')}\n              handleChangeMultiple={handleChangeMultiple('province')}\n            />\n            <MultipleFilter\n              filterType=\"occupation\"\n              value={occupationFilters}\n              optionList={occupationList}\n              handleChange={handleChange('occupation')}\n              handleChangeMultiple={handleChangeMultiple('occupation')}\n            />\n          </>\n        )}\n        <InsightTable\n          tableTitle={getTableTitle()}\n          tableHeaderRow={getTableHeaderRow()}\n          data={tableData.slice(0, rowNumber)}\n          ranking\n        />\n      </Container>\n    </Grid>\n  );\n}\n\nexport default TopInfo;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport LmiaDataTable from './components/DataTable';\nimport Intro from './components/Intro';\nimport ResponsiveDrawer from './components/ResponsiveDrawer';\nimport TopInfo from './components/TopInfo';\n\nfunction App() {\n  return (\n    <Router>\n      <ResponsiveDrawer>\n        <Switch>\n          <Route path=\"/data\">\n            <LmiaDataTable />\n          </Route>\n          <Route path=\"/province\">\n            <TopInfo infoType=\"province\" />\n          </Route>\n          <Route path=\"/employer\">\n            <TopInfo infoType=\"employer\" />\n          </Route>\n          <Route path=\"/occupation\">\n            <TopInfo infoType=\"occupation\" />\n          </Route>\n          <Route path=\"/\">\n            <Intro />\n          </Route>\n        </Switch>\n      </ResponsiveDrawer>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport CustomThemeProvider from './contexts/CustomerThemeProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CustomThemeProvider>\n      <App />\n    </CustomThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}