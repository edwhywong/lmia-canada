{"version":3,"sources":["data/2020/index.ts","data/index.ts","components/DataTable.tsx","components/Intro.tsx","contexts/CustomerThemeProvider.tsx","hooks/useCustomTheme.ts","components/ResponsiveDrawer/DarkModeToggle.tsx","components/ResponsiveDrawer/GithubLink.tsx","components/ResponsiveDrawer/ResponsiveDrawer.tsx","components/InsightTable.tsx","components/TopInfo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["q1","q2","q3","q4","2020","lmia2020data","allTime","LmiaDataTable","rows","React","useMemo","data","map","d","idx","id","style","height","window","innerHeight","width","columns","field","headerName","flex","type","filterModel","items","columnField","operatorValue","value","useStyles","makeStyles","theme","createStyles","title","marginTop","spacing","marginBottom","fontWeight","bulletContainer","paddingLeft","Intro","classes","Grid","item","xs","Container","maxWidth","Typography","variant","className","CustomThemeContext","createContext","setTheme","themes","light","primary","main","contrastText","dark","CustomThemeProvider","props","children","prefersDarkMode","useMediaQuery","useState","localStorage","getItem","isInitialMount","useRef","useEffect","current","setItem","Provider","ThemeProvider","createMuiTheme","palette","useCustomTheme","useContext","DarkModeToggle","IconButton","color","aria-label","onClick","GithubLink","open","root","display","drawer","breakpoints","up","flexShrink","appBar","zIndex","backgroundColor","menuButton","marginRight","textDecoration","appBarSeparator","flexGrow","drawerPaper","drawerContainer","overflow","content","padding","ResponsiveDrawer","useTheme","mobileOpen","setMobileOpen","handleDrawerToggle","Toolbar","Divider","List","label","link","icon","ListItem","button","component","Link","to","ListItemIcon","ListItemText","container","undefined","document","body","CssBaseline","AppBar","position","elevation","edge","Hidden","smUp","implementation","Drawer","anchor","direction","onClose","paper","ModalProps","keepMounted","xsDown","table","minWidth","InsightTable","tableTitle","tableHeaderRow","ranking","TableContainer","Paper","Table","TableHead","TableRow","TableCell","header","columnIdx","align","length","TableBody","row","Object","keys","key","occupationList","Array","from","Set","Occupation","sort","yearOptions","rowOptions","optionBtn","formControl","TopInfo","infoType","year","setYear","rowNumber","setRowNumber","occupationFilterText","setOccupationFilterText","tableData","tempGroup","filteredData","tempData","_","groupBy","sortBy","occupation","quantity","Number","reduce","a","c","reverse","filter","employer","province","opt","Button","FormControl","InputLabel","Select","native","onChange","event","target","inputProps","name","occ","getTableTitle","firstColumn","getTableHeaderRow","slice","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.34ef7738.chunk.js","sourcesContent":["import q1 from './TFWP_2020Q1_Positive_EN.json';\nimport q2 from './TFWP_2020Q2_Positive_EN.json';\nimport q3 from './TFWP_2020Q3_Positive_EN.json';\nimport q4 from './TFWP_2020Q4_Positive_EN.json';\n\nexport default [...q1, ...q2, ...q3, ...q4];\n","import lmia2020data from './2020';\nimport { LmiaDataYear, LmiaData } from './types';\n\nexport { default as lmia2020data } from './2020';\n\nconst allTimeData = [...lmia2020data];\n\nexport default {\n  2020: lmia2020data,\n  allTime: allTimeData,\n} as { [key in LmiaDataYear]: LmiaData[] };\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport data from '../data';\n\nfunction LmiaDataTable() {\n  const rows = React.useMemo(\n    () =>\n      [...data.allTime].map((d, idx) => ({\n        id: idx,\n        ...d,\n      })),\n    []\n  );\n\n  const column = [\n    {\n      field: 'Province/Territory',\n      headerName: 'Province/Territory',\n      flex: 1,\n    },\n    { field: 'Stream', headerName: 'Stream', flex: 1 },\n    { field: 'Employer', headerName: 'Employer', flex: 1 },\n    {\n      field: 'Address',\n      headerName: 'Address',\n      flex: 1,\n    },\n    {\n      field: 'Occupation',\n      headerName: 'Occupation',\n      flex: 1,\n    },\n    {\n      field: 'Approved Positions',\n      headerName: 'Approved Positions',\n      type: 'number',\n      flex: 1,\n    },\n  ];\n\n  return (\n    <div style={{ height: window.innerHeight - 64 * 2, width: '100%' }}>\n      <DataGrid\n        rows={rows}\n        columns={column}\n        filterModel={{\n          items: [\n            {\n              columnField: 'Province/Territory',\n              operatorValue: 'contains',\n              value: '',\n            },\n            {\n              columnField: 'Occupation',\n              operatorValue: 'contains',\n              value: '',\n            },\n          ],\n        }}\n      />\n    </div>\n  );\n}\n\nexport default LmiaDataTable;\n","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n      fontWeight: 'bold',\n    },\n    bulletContainer: {\n      paddingLeft: theme.spacing(2),\n    },\n  })\n);\n\nfunction Intro() {\n  const classes = useStyles();\n\n  return (\n    <Grid item xs={12}>\n      <Container maxWidth=\"md\">\n        <Typography variant=\"h4\" className={classes.title}>\n          What is a Labour Market Impact Assessment?\n        </Typography>\n        <Typography>\n          A Labour Market Impact Assessment (LMIA) is a document that an\n          employer in Canada may need to get before hiring a foreign worker.\n        </Typography>\n        <Typography variant=\"h4\" className={classes.title}>\n          Purpose of this website is to...\n        </Typography>\n        <ul className={classes.bulletContainer}>\n          <li>\n            <Typography>\n              Show how many LMIA are issued for each Province\n            </Typography>\n          </li>\n          <li>\n            <Typography>Find out which employers hired most</Typography>\n          </li>\n          <li>\n            <Typography>Know which occupations are demanding</Typography>\n          </li>\n        </ul>\n      </Container>\n    </Grid>\n  );\n}\n\nexport default Intro;\n","import React, {\n  useState,\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useEffect,\n  useRef,\n} from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { PaletteOptions } from '@material-ui/core/styles/createPalette';\n\ntype Theme = 'dark' | 'light';\n\ntype CustomThemeContextType = {\n  theme: Theme;\n  setTheme: Dispatch<SetStateAction<Theme>>;\n};\n\nexport const CustomThemeContext = createContext<CustomThemeContextType>({\n  theme: 'light',\n  setTheme: () => 'light',\n});\n\nconst themes: {\n  [key in Theme]: PaletteOptions;\n} = {\n  light: {\n    primary: {\n      main: '#38d1cc',\n      contrastText: '#fff',\n    },\n  },\n  dark: {\n    primary: {\n      main: '#593d88',\n    },\n  },\n};\n\ninterface Props {\n  children: JSX.Element;\n}\n\nfunction CustomThemeProvider(props: Props) {\n  const { children } = props;\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const [theme, setTheme] = useState<Theme>(\n    (window.localStorage.getItem('theme') as Theme) ?? 'light'\n  );\n  const isInitialMount = useRef(true);\n\n  useEffect(() => {\n    if (!window.localStorage.getItem('theme')) {\n      setTheme(prefersDarkMode ? 'dark' : 'light');\n    }\n  }, [prefersDarkMode]);\n\n  useEffect(() => {\n    if (!isInitialMount.current) {\n      window.localStorage.setItem('theme', theme);\n    }\n  }, [theme]);\n\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n    }\n  });\n\n  const generateTheme = (type: Theme) =>\n    createMuiTheme({\n      palette: { type, ...themes[type] },\n    });\n\n  return (\n    <CustomThemeContext.Provider value={{ theme, setTheme }}>\n      <ThemeProvider theme={generateTheme(theme)}>{children}</ThemeProvider>\n    </CustomThemeContext.Provider>\n  );\n}\n\nexport default CustomThemeProvider;\n","import { useContext } from 'react';\n\nimport { CustomThemeContext } from '../contexts/CustomerThemeProvider';\n\nfunction useCustomTheme() {\n  const { theme, setTheme } = useContext(CustomThemeContext);\n\n  return { theme, setTheme };\n}\n\nexport default useCustomTheme;\n","import React from 'react';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport IconButton from '@material-ui/core/IconButton';\nimport useCustomTheme from '../../hooks/useCustomTheme';\n\nfunction DarkModeToggle() {\n  const { theme, setTheme } = useCustomTheme();\n  return (\n    <IconButton\n      color=\"default\"\n      aria-label=\"dark mode toggle\"\n      onClick={() => {\n        setTheme(theme === 'dark' ? 'light' : 'dark');\n      }}\n    >\n      {theme === 'dark' ? <Brightness7Icon /> : <Brightness4Icon />}\n    </IconButton>\n  );\n}\n\nexport default DarkModeToggle;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nfunction GithubLink() {\n  return (\n    <IconButton\n      color=\"default\"\n      aria-label=\"open github\"\n      onClick={() =>\n        window.open('https://github.com/edwhywong/lmia-canada', '_blank')\n      }\n    >\n      <GitHubIcon />\n    </IconButton>\n  );\n}\n\nexport default GithubLink;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport InfoIcon from '@material-ui/icons/Info';\nimport StorageIcon from '@material-ui/icons/Storage';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport WorkIcon from '@material-ui/icons/Work';\nimport PublicIcon from '@material-ui/icons/Public';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  makeStyles,\n  useTheme,\n  Theme,\n  createStyles,\n} from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport DarkModeToggle from './DarkModeToggle';\nimport GithubLink from './GithubLink';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      backgroundColor: theme.palette.type === 'dark' ? '#242526' : '#fafafb',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        display: 'none',\n      },\n    },\n    title: {\n      textDecoration: 'none',\n      color: theme.palette.type === 'dark' ? '#fff' : '#666',\n    },\n    appBarSeparator: {\n      flexGrow: 1,\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    drawerContainer: {\n      overflow: 'auto',\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n  })\n);\n\ninterface Props {\n  /**\n   * Injected by the documentation to work in an iframe.\n   * You won't need it on your project.\n   */\n  window?: () => Window;\n  children: JSX.Element;\n}\n\nfunction ResponsiveDrawer(props: Props) {\n  const { window, children } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const drawer = (\n    <div>\n      <Toolbar />\n      <Divider />\n      <List>\n        {[\n          {\n            label: 'Intro',\n            link: '/',\n            icon: <InfoIcon />,\n          },\n          {\n            label: 'Top Province',\n            link: '/province',\n            icon: <PublicIcon />,\n          },\n          {\n            label: 'Top Employer',\n            link: '/employer',\n            icon: <BusinessIcon />,\n          },\n          {\n            label: 'Top Occupation',\n            link: '/occupation',\n            icon: <WorkIcon />,\n          },\n          {\n            label: 'Data table',\n            link: '/data',\n            icon: <StorageIcon />,\n          },\n        ].map((item) => (\n          <div key={item.label}>\n            <ListItem\n              button\n              component={Link}\n              to={item.link}\n              onClick={() => {\n                if (mobileOpen) {\n                  handleDrawerToggle();\n                }\n              }}\n            >\n              <ListItemIcon>{item.icon}</ListItemIcon>\n              <ListItemText primary={item.label} />\n            </ListItem>\n            <Divider />\n          </div>\n        ))}\n      </List>\n    </div>\n  );\n\n  const container =\n    window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar} elevation={2}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon color=\"action\" />\n          </IconButton>\n          <Link to=\"/\" className={classes.title}>\n            {/* <HomeIcon /> */}\n            <Typography variant=\"h6\">LMIA Canada 🇨🇦</Typography>\n          </Link>\n          <i className={classes.appBarSeparator} />\n          <GithubLink />\n          <DarkModeToggle />\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"lmia folders\">\n        {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true, // Better open performance on mobile.\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            <div className={classes.drawerContainer}>{drawer}</div>\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <Toolbar />\n        {children}\n      </main>\n    </div>\n  );\n}\n\nexport default ResponsiveDrawer;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    table: {\n      minWidth: 320,\n    },\n    title: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  })\n);\n\ninterface Props {\n  tableTitle?: string;\n  tableHeaderRow: string[];\n  data: {\n    [key: string]: string | number;\n  }[];\n  ranking?: boolean;\n}\n\nexport default function InsightTable(props: Props) {\n  const { tableTitle, tableHeaderRow, data, ranking = false } = props;\n  const classes = useStyles();\n\n  return (\n    <div>\n      {tableTitle && (\n        <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n          {tableTitle}\n        </Typography>\n      )}\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"insight table\">\n          <TableHead>\n            <TableRow>\n              {ranking && <TableCell>Rank 🎖</TableCell>}\n              {tableHeaderRow.map((header, columnIdx) => (\n                <TableCell\n                  key={header}\n                  align={\n                    columnIdx === tableHeaderRow.length - 1\n                      ? 'right'\n                      : undefined\n                  }\n                >\n                  {header}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((row, idx) => (\n              <TableRow key={`${tableHeaderRow[idx]}-row-${idx}`}>\n                {ranking && <TableCell>{idx + 1}</TableCell>}\n                {Object.keys(row).map((key, columnIdx) => (\n                  <TableCell\n                    key={key}\n                    align={\n                      columnIdx === Object.keys(row).length - 1\n                        ? 'right'\n                        : undefined\n                    }\n                  >\n                    {row[key]}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n","import React, { useState, useMemo } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport {\n  Button,\n  Container,\n  FormControl,\n  Grid,\n  Typography,\n  InputLabel,\n  Select,\n} from '@material-ui/core';\nimport _ from 'lodash';\nimport { LmiaData, LmiaDataYear, Province } from '../data/types';\nimport data from '../data';\nimport InsightTable from './InsightTable';\n\ntype OccupationInfo = { occupation: string; quantity: number };\ntype EmployerInfo = { employer: string; quantity: number };\ntype ProvinceInfo = { province: Province; quantity: number };\n\nconst occupationList = [\n  ...Array.from(\n    new Set(([...data.allTime] as LmiaData[]).map((d) => d.Occupation))\n  ),\n].sort();\n\ninterface Props {\n  infoType: 'occupation' | 'employer' | 'province';\n}\n\nconst yearOptions: LmiaDataYear[] = ['2020', 'allTime'];\n\nconst rowOptions = [25, 50, 100];\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    title: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    optionBtn: {\n      marginRight: theme.spacing(1),\n    },\n    formControl: {\n      marginTop: theme.spacing(1),\n      minWidth: 120,\n    },\n  })\n);\n\nfunction TopInfo(props: Props) {\n  const { infoType } = props;\n  const classes = useStyles();\n  const [year, setYear] = useState<LmiaDataYear>('2020');\n  const [rowNumber, setRowNumber] = useState(25);\n  const [occupationFilterText, setOccupationFilterText] = useState('');\n\n  const tableData = useMemo(() => {\n    let filteredData: (OccupationInfo | EmployerInfo | ProvinceInfo)[] = [];\n    let tempData: LmiaData[] = [...data[year]];\n    let tempGroup: _.Dictionary<LmiaData[]>;\n    switch (infoType) {\n      case 'occupation':\n        tempGroup = _.groupBy(tempData, 'Occupation');\n        filteredData = _.sortBy(\n          Object.keys(tempGroup).map((key) => ({\n            occupation: key,\n            quantity: tempGroup[key]\n              .map((d) => Number(d['Approved Positions']))\n              .reduce((a, c) => a + c, 0),\n          })),\n          'quantity'\n        ).reverse();\n        break;\n      case 'employer':\n        if (occupationFilterText) {\n          tempData = tempData.filter(\n            (d) => d.Occupation === occupationFilterText\n          );\n        }\n        tempGroup = _.groupBy(tempData, 'Employer');\n        filteredData = _.sortBy(\n          Object.keys(tempGroup).map((key) => ({\n            employer: key,\n            quantity: (tempGroup[key] as LmiaData[])\n              .map((d) => Number(d['Approved Positions']))\n              .reduce((a, c) => a + c, 0),\n          })),\n          'quantity'\n        ).reverse();\n        break;\n      case 'province':\n        tempGroup = _.groupBy(tempData, 'Province/Territory');\n        filteredData = _.sortBy(\n          Object.keys(tempGroup).map((key) => ({\n            province: key as Province,\n            quantity: tempGroup[key]\n              .map((d) => Number(d['Approved Positions']))\n              .reduce((a, c) => a + c, 0),\n          })),\n          'quantity'\n        ).reverse();\n        break;\n      default:\n        break;\n    }\n    return filteredData;\n  }, [infoType, year, occupationFilterText]);\n\n  const getTableTitle = () => {\n    switch (infoType) {\n      case 'employer':\n        return 'Employer';\n      case 'occupation':\n        return 'Occupation';\n      case 'province':\n        return 'LMIA issued by Province';\n      default:\n        return '';\n    }\n  };\n\n  const getTableHeaderRow = () => {\n    let firstColumn = '';\n    switch (infoType) {\n      case 'employer':\n        firstColumn = 'Employer 🏢';\n        break;\n      case 'occupation':\n        firstColumn = 'Occupation 💼';\n        break;\n      case 'province':\n        firstColumn = 'Province/Territory';\n        break;\n      default:\n        break;\n    }\n    return [firstColumn, 'Quantity'];\n  };\n\n  const handleOccupationChange = (\n    event: React.ChangeEvent<{ name?: string | undefined; value: unknown }>\n  ) => {\n    setOccupationFilterText(event.target.value as string);\n  };\n\n  return (\n    <Grid item xs={12}>\n      <Container maxWidth=\"md\">\n        {yearOptions.map((opt) => (\n          <Button\n            key={`year-option-${opt}`}\n            variant={year === opt ? 'contained' : 'outlined'}\n            color={year === opt ? 'primary' : undefined}\n            onClick={() => {\n              setYear(opt);\n            }}\n            className={classes.optionBtn}\n          >\n            {opt}\n          </Button>\n        ))}\n        <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n          Top\n        </Typography>\n\n        {rowOptions.map((opt) => (\n          <Button\n            key={`row-option-${opt}`}\n            variant={rowNumber === opt ? 'contained' : 'outlined'}\n            color={rowNumber === opt ? 'primary' : undefined}\n            onClick={() => {\n              setRowNumber(opt);\n            }}\n            className={classes.optionBtn}\n          >\n            {opt}\n          </Button>\n        ))}\n        {infoType === 'employer' && (\n          <div>\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"occupation-select-helper-label\">\n                Occupation\n              </InputLabel>\n              <Select\n                native\n                value={occupationFilterText}\n                onChange={handleOccupationChange}\n                inputProps={{\n                  name: 'occupation',\n                  id: 'occupation-select-helper-label',\n                }}\n              >\n                <option aria-label=\"None\" value=\"\" />\n                {occupationList.map((occ) => (\n                  <option key={occ} value={occ}>\n                    {occ}\n                  </option>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n        )}\n        <InsightTable\n          tableTitle={getTableTitle()}\n          tableHeaderRow={getTableHeaderRow()}\n          data={tableData.slice(0, rowNumber)}\n          ranking\n        />\n      </Container>\n    </Grid>\n  );\n}\n\nexport default TopInfo;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport LmiaDataTable from './components/DataTable';\nimport Intro from './components/Intro';\nimport ResponsiveDrawer from './components/ResponsiveDrawer';\nimport TopInfo from './components/TopInfo';\n\nfunction App() {\n  return (\n    <Router>\n      <ResponsiveDrawer>\n        <Switch>\n          <Route path=\"/data\">\n            <LmiaDataTable />\n          </Route>\n          <Route path=\"/province\">\n            <TopInfo infoType=\"province\" />\n          </Route>\n          <Route path=\"/employer\">\n            <TopInfo infoType=\"employer\" />\n          </Route>\n          <Route path=\"/occupation\">\n            <TopInfo infoType=\"occupation\" />\n          </Route>\n          <Route path=\"/\">\n            <Intro />\n          </Route>\n        </Switch>\n      </ResponsiveDrawer>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport CustomThemeProvider from './contexts/CustomerThemeProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CustomThemeProvider>\n      <App />\n    </CustomThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}